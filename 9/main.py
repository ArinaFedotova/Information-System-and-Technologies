import telebot
from telebot import types
import json


TOKEN = 'BOT_TOKEN'
bot = telebot.TeleBot(TOKEN)


def load_data():
    with open('data.json', 'r', encoding='utf-8') as file:
        data = json.load(file)
    return data

QandA = load_data()['questions']
results = load_data()['results']

votes = {question: {option: 0 for option in QandA[question]['options']} for question in QandA}  # {question: {option: count}}
user_votes = {}  # {user_id: {question: chosen_option}}

@bot.message_handler(commands=['start'])
def start(m):
    bot.send_message(m.chat.id, '–ü—Ä–∏–≤–µ—Ç! üëã')

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(*[types.InlineKeyboardButton(name, callback_data=name) for name in
                   ['–¢–µ—Å—Ç—ã üìã', '–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã ü™Ñ', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ‚ÑπÔ∏è']])

    bot.send_message(m.chat.id, '–ù–µ–±–æ–ª—å—à–æ–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å–µ–∞–Ω—Å, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Å–µ–±—è –∏ –ø–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–æ–≤ ü§î',
                     reply_markup=keyboard)

# –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤
@bot.callback_query_handler(func=lambda m: True)
def handle_query(m):
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—É–Ω–∫—Ç–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    if m.data == '–¢–µ—Å—Ç—ã üìã':
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        keyboard.add(*[types.InlineKeyboardButton(name, callback_data=name) for name in
                       ['–í–æ–ø—Ä–æ—Å 1: –î–≤–µ—Ä–∏ üö™', '–í–æ–ø—Ä–æ—Å 2: –î–µ–π—Å—Ç–≤–∏–µ üßë‚Äçü¶≥', '–í–æ–ø—Ä–æ—Å 3: –§–∏–≥—É—Ä—ã üî∫', '–í–æ–ø—Ä–æ—Å 4: –ö–∞—Ä—Ç–∏–Ω–∫–∞ üñºÔ∏è', '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ üîô']])
        bot.send_message(m.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –¥–ª—è —Ç–µ—Å—Ç–∞ üìú:', reply_markup=keyboard)

    elif m.data == '–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã ü™Ñ':
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        keyboard.add(*[types.InlineKeyboardButton(name, callback_data=name) for name in
                       ['–ö–∞–∫ –±—ã—Ç—å —Å—á–∞—Å—Ç–ª–∏–≤—ã–º? üòä', '–ö–∞–∫ –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –ø–µ—Ä–µ–∂–∏–≤–∞—Ç—å? üòå', '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ üîô']])
        bot.send_message(m.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ–∫—Ä–µ—Ç –∂–∏–∑–Ω–∏ üåü:', reply_markup=keyboard)

    elif m.data == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ‚ÑπÔ∏è':
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        keyboard.add(*[types.InlineKeyboardButton(name, callback_data=name) for name in
                       ['–û–± –∞–≤—Ç–æ—Ä–µ ‚úçÔ∏è', '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ üÜò', '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ üîô']])
        bot.send_message(m.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ üìö:', reply_markup=keyboard)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    elif m.data == '–í–æ–ø—Ä–æ—Å 1: –î–≤–µ—Ä–∏ üö™':
        bot.send_message(m.message.chat.id, '–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ –≤—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –ø–µ—Ä–µ–¥ —á–µ—Ç—ã—Ä—å–º—è –¥–≤–µ—Ä—è–º–∏. '
                                            '–í–æ–π–¥–∏—Ç–µ –≤ –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö –≤ –ø–æ–∏—Å–∫–∞—Ö –≤—ã—Ö–æ–¥–∞. –û—Å–º–æ—Ç—Ä–∏—Ç–µ—Å—å –ø–æ —Å—Ç–æ—Ä–æ–Ω–∞–º. '
                                            '–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã: –ö–∞–∫ –æ–Ω–∞ –≤—ã–≥–ª—è–¥–∏—Ç? –ö–∞–∫–∏–µ —á—É–≤—Å—Ç–≤–∞ –∏ –º—ã—Å–ª–∏ —É –≤–∞—Å '
                                            '–≤–æ–∑–Ω–∏–∫–∞—é—Ç? –ó–∞–ø–æ–º–Ω–∏—Ç–µ –≤—Å–µ, —á—Ç–æ —É–≤–∏–¥–µ–ª–∏ –∏ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∏. –ê –∑–∞—Ç–µ–º –≤—ã—Ö–æ–¥–∏—Ç–µ.')
        ask_question(m, '–í–æ–ø—Ä–æ—Å 1')

    elif m.data == '–í–æ–ø—Ä–æ—Å 2: –î–µ–π—Å—Ç–≤–∏–µ üßë‚Äçü¶≥':
        bot.send_message(m.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ —á–µ—Ç—ã—Ä–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π –≤ —Å–∏—Ç—É–∞—Ü–∏–∏ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ –Ω–∏–∂–µ.')
        ask_question(m, '–í–æ–ø—Ä–æ—Å 2')

    elif m.data == '–í–æ–ø—Ä–æ—Å 3: –§–∏–≥—É—Ä—ã üî∫':
        bot.send_message(m.message.chat.id, '–í–∑–≥–ª—è–Ω–∏—Ç–µ –Ω–∞ —ç—Ç–∏ –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∏–≥—É—Ä—ã. –ö–∞–∫–∞—è –∏–∑ –Ω–∏—Ö –≤–∞–º –±–ª–∏–∂–µ?')
        ask_question(m, '–í–æ–ø—Ä–æ—Å 3')

    elif m.data == '–í–æ–ø—Ä–æ—Å 4: –ö–∞—Ä—Ç–∏–Ω–∫–∞ üñºÔ∏è':
        bot.send_message(m.message.chat.id, '–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ —Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤—ã —É–≤–∏–¥–µ–ª–∏ –Ω–∞ –Ω–µ–π –ø–µ—Ä–≤—ã–º?')
        ask_question(m, '–í–æ–ø—Ä–æ—Å 4')

    elif m.data.startswith("–í–æ–ø—Ä–æ—Å"):
        question, option = m.data.split("_")
        user_votes[m.message.from_user.id] = user_votes.get(m.message.from_user.id, {})
        user_votes[m.message.from_user.id][question] = option

        votes[question][option] += 1
        display_votes(m, question)

        callback_data = m.data.split('_')
        if len(callback_data) > 1:
            question = callback_data[0]
            choice = callback_data[1]
            result_message = results.get(choice, '–†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω')

            bot.send_message(m.message.chat.id, result_message)

            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥ –∫ —Ç–µ—Å—Ç–∞–º üìã', callback_data='–¢–µ—Å—Ç—ã üìã'))
            bot.send_message(m.message.chat.id, '–í—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ç–µ—Å—Ç–∞–º:', reply_markup=keyboard)

    elif m.data == '–ö–∞–∫ –±—ã—Ç—å —Å—á–∞—Å—Ç–ª–∏–≤—ã–º? üòä':
        bot.send_message(m.message.chat.id,
                         '–°—á–∞—Å—Ç—å–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø—Ä–∏–Ω—è—Ç–∏—è —Å–µ–±—è –∏ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –∑–∞ —Ç–æ, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å üôè'
                         '–°—Ñ–æ–∫—É—Å–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ –ø–æ–∑–∏—Ç–∏–≤–µ –∏ –º–∞–ª–µ–Ω—å–∫–∏—Ö —Ä–∞–¥–æ—Å—Ç—è—Ö –∂–∏–∑–Ω–∏ üå∏')

        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton('20 –≤–µ—â–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–¥–æ –æ—Ç–ø—É—Å—Ç–∏—Ç—å, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å —Å—á–∞—Å—Ç–ª–∏–≤—ã–º',
                                                url='https://lifehacker.ru/20-veshhej-kotorye-nado-otpustit-chtoby-byt-schastlivym/'))

        image_url = 'https://www.litres.ru/pub/c/cover/6881047.jpg'

        bot.send_message(m.message.chat.id, '–ü–æ–ª–µ–∑–Ω–∞—è —Å—Ç–∞—Ç—å—è –∏ –∫–Ω–∏–≥–∞ –ø–æ —Ç–µ–º–µ: ', reply_markup=keyboard)
        bot.send_photo(m.message.chat.id, image_url)
        bot.send_message(m.message.chat.id,
                         '–ö–∞–∫ –±—ã—Ç—å —Å—á–∞—Å—Ç–ª–∏–≤—ã–º. 128 —Å–æ–≤–µ—Ç–æ–≤, –∫–∞–∫ –∂–∏—Ç—å –≤ –ª—é–±–≤–∏ –∏ –≥–∞—Ä–º–æ–Ω–∏–∏ ‚Äî –ú—Ä–∏–Ω–∞–ª –ö—É–º–∞—Ä –ì—É–ø—Ç–∞')

    elif m.data == '–ö–∞–∫ –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –ø–µ—Ä–µ–∂–∏–≤–∞—Ç—å? üòå':
        bot.send_message(m.message.chat.id,
                         '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –ø–µ—Ä–µ–∂–∏–≤–∞—Ç—å, —É—á–∏—Ç–µ—Å—å –æ—Ç–ø—É—Å–∫–∞—Ç—å –≤–µ—â–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å üå¨Ô∏è. '
                         '–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å üßò –∏ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è üåø')
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton('–ö–∞–∫ –º–µ–Ω—å—à–µ –ø–µ—Ä–µ–∂–∏–≤–∞—Ç—å –∏–∑-–∑–∞ –µ—Ä—É–Ω–¥—ã', url='https://t-j.ru/short/stop-worrying/'))

        image_url = 'https://www.litres.ru/pub/c/cover/21128756.jpg'

        bot.send_message(m.message.chat.id, '–ü–æ–ª–µ–∑–Ω–∞—è —Å—Ç–∞—Ç—å—è –∏ –∫–Ω–∏–≥–∞ –ø–æ —Ç–µ–º–µ: ', reply_markup=keyboard)
        bot.send_photo(m.message.chat.id, image_url)
        bot.send_message(m.message.chat.id,
                         '–ö–∞–∫ –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è –∏ –Ω–∞—á–∞—Ç—å –∂–∏—Ç—å ‚Äî –î–µ–π–ª –ö–∞—Ä–Ω–µ–≥–∏')

    elif m.data == '–û–± –∞–≤—Ç–æ—Ä–µ ‚úçÔ∏è':
        bot.send_message(m.message.chat.id, '–ê–≤—Ç–æ—Ä –±–æ—Ç–∞ ‚Äî —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å –ª—é–±–æ–≤—å—é –∫ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏ –∏ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—é ‚ù§Ô∏è.')

    elif m.data == '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ üÜò':
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton('–ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram', url='https://t.me/lab_7_test_bot'))
        bot.send_message(m.message.chat.id, '–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ Telegram üì±: ', reply_markup=keyboard)

    elif m.data == '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ üîô':
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(*[types.InlineKeyboardButton(name, callback_data=name) for name in
                       ['–¢–µ—Å—Ç—ã üìã', '–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã ü™Ñ', '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ‚ÑπÔ∏è']])
        bot.send_message(m.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª —Å–Ω–æ–≤–∞ üîÑ:', reply_markup=keyboard)


def ask_question(m, question):
    image_url = QandA[question]['image']
    bot.send_photo(m.message.chat.id, image_url)

    keyboard = types.InlineKeyboardMarkup()
    for option in QandA[question]['options']:
        button = types.InlineKeyboardButton(text=option, callback_data=f'{question}_{option}')
        keyboard.add(button)
    bot.send_message(m.message.chat.id, f'–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç: {question}', reply_markup=keyboard)


def display_votes(m, question):
    vote_text = "–ì–æ–ª–æ—Å–∞ –∑–∞ –∫–∞–∂–¥—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:\n"
    for option, vote_count in votes[question].items():
        vote_text += f"{option}: {vote_count} –≥–æ–ª–æ—Å–æ–≤\n"

    bot.send_message(m.message.chat.id, vote_text)


if __name__ == "__main__":
    bot.polling(none_stop=True)
